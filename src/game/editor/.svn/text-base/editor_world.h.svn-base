//
// Copyright (c) 2008-2011, Dean Harding. All rights reserved.
//
#pragma once

#include "../framework/bitmap.h"
#include "../framework/vector.h"
#include "../game/world/world_reader.h"
#include "../game/world/world.h"

namespace fw {
	class graphics;
}

namespace ww {
	class terrain;
}

namespace ed {

	// this is a specialization of world_reader that creates a brand new world from
	// scratch. this, obviously, is only useful to the editor!
	class world_create : public ww::world_reader
	{
	private:
		int _width;
		int _height;

	protected:
		virtual ww::terrain *create_terrain(int width, int length);

	public:
		world_create();
		world_create(int width, int height);
	};

	// The world in the editor is a bit different - no entities and so on...
	class editor_world : public ww::world
	{
	protected:
		virtual void initialise_entities();
		virtual void initialise_pathing();

		fw::bitmap _screenshot;

	public:
		editor_world(shared_ptr<ww::world_reader> reader);
		virtual ~editor_world();

		fw::bitmap const &get_screenshot() const { return _screenshot; }
		void set_screenshot(fw::bitmap const &bmp) { _screenshot = bmp; }
	};

}